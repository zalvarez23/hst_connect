<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 3.0.1">

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`apppreferences_langValues`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;ja&quot; (Japanese), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ru&quot; (Russian), &quot;uk&quot; (Ukrainian), &quot;vi&quot; (Vietnamese)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="&lt;resources>&lt;string-array name=&quot;apppreferences_lang&quot;>&lt;item>English (US)&lt;/item>&lt;item>English (UK)&lt;/item>&lt;/string-array>&lt;string-array name=&quot;apppreferences_langValues&quot;>&lt;item>en-us&lt;/item>&lt;item>en-gb&lt;/item>&lt;/string-array>&lt;/resources>"
        errorLine2="                                                                                                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/kevin/Desktop/IonicProject/hst_connect/hst_connect/platforms/android/app/src/main/res/values/apppreferences.xml"
            line="2"
            column="132"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`apppreferences_lang`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;ja&quot; (Japanese), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ru&quot; (Russian), &quot;uk&quot; (Ukrainian), &quot;vi&quot; (Vietnamese)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="&lt;resources>&lt;string-array name=&quot;apppreferences_lang&quot;>&lt;item>English (US)&lt;/item>&lt;item>English (UK)&lt;/item>&lt;/string-array>&lt;string-array name=&quot;apppreferences_langValues&quot;>&lt;item>en-us&lt;/item>&lt;item>en-gb&lt;/item>&lt;/string-array>&lt;/resources>"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/kevin/Desktop/IonicProject/hst_connect/hst_connect/platforms/android/app/src/main/res/values/apppreferences.xml"
            line="2"
            column="26"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`app_name`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;ja&quot; (Japanese), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ru&quot; (Russian), &quot;uk&quot; (Ukrainian), &quot;vi&quot; (Vietnamese)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;app_name&quot;>HST&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="/Users/kevin/Desktop/IonicProject/hst_connect/hst_connect/platforms/android/app/src/main/res/values/strings.xml"
            line="3"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`launcher_name`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;ja&quot; (Japanese), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ru&quot; (Russian), &quot;uk&quot; (Ukrainian), &quot;vi&quot; (Vietnamese)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;launcher_name&quot;>@string/app_name&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/kevin/Desktop/IonicProject/hst_connect/hst_connect/platforms/android/app/src/main/res/values/strings.xml"
            line="4"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`activity_name`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;ja&quot; (Japanese), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ru&quot; (Russian), &quot;uk&quot; (Ukrainian), &quot;vi&quot; (Vietnamese)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;activity_name&quot;>@string/launcher_name&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/kevin/Desktop/IonicProject/hst_connect/hst_connect/platforms/android/app/src/main/res/values/strings.xml"
            line="5"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`adeum_app_key`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;ja&quot; (Japanese), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ru&quot; (Russian), &quot;uk&quot; (Ukrainian), &quot;vi&quot; (Vietnamese)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;adeum_app_key&quot;>EUM-AAB-BAW&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/kevin/Desktop/IonicProject/hst_connect/hst_connect/platforms/android/app/src/main/res/values/strings.xml"
            line="6"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`adeum_collector_url`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;ja&quot; (Japanese), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ru&quot; (Russian), &quot;uk&quot; (Ukrainian), &quot;vi&quot; (Vietnamese)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;adeum_collector_url&quot;>https://appd-prod-eum.multiplan.com&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/kevin/Desktop/IonicProject/hst_connect/hst_connect/platforms/android/app/src/main/res/values/strings.xml"
            line="7"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`adeum_screenshot_url`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;ja&quot; (Japanese), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ru&quot; (Russian), &quot;uk&quot; (Ukrainian), &quot;vi&quot; (Vietnamese)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;adeum_screenshot_url&quot;>https://image.eum-appdynamics.com&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/kevin/Desktop/IonicProject/hst_connect/hst_connect/platforms/android/app/src/main/res/values/strings.xml"
            line="8"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`adeum_screenshots_enabled`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;ja&quot; (Japanese), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ru&quot; (Russian), &quot;uk&quot; (Ukrainian), &quot;vi&quot; (Vietnamese)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;adeum_screenshots_enabled&quot;>false&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/kevin/Desktop/IonicProject/hst_connect/hst_connect/platforms/android/app/src/main/res/values/strings.xml"
            line="9"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`adeum_logging_level`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;ja&quot; (Japanese), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ru&quot; (Russian), &quot;uk&quot; (Ukrainian), &quot;vi&quot; (Vietnamese)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;adeum_logging_level&quot;>1&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/kevin/Desktop/IonicProject/hst_connect/hst_connect/platforms/android/app/src/main/res/values/strings.xml"
            line="10"
            column="13"/>
    </issue>

    <issue
        id="MissingTranslation"
        severity="Fatal"
        message="&quot;`adeum_interaction_capture_mode`&quot; is not translated in &quot;ar&quot; (Arabic), &quot;da&quot; (Danish), &quot;de&quot; (German), &quot;es&quot; (Spanish), &quot;fr&quot; (French), &quot;hi&quot; (Hindi), &quot;ja&quot; (Japanese), &quot;nl&quot; (Dutch), &quot;pl&quot; (Polish), &quot;pt-PT&quot; (Portuguese: Portugal), &quot;ru&quot; (Russian), &quot;uk&quot; (Ukrainian), &quot;vi&quot; (Vietnamese)"
        category="Correctness:Messages"
        priority="8"
        summary="Incomplete translation"
        explanation="If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.&#xA;&#xA;If the string should **not** be translated, you can add the attribute `translatable=&quot;false&quot;` on the `&lt;string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=&quot;MissingTranslation&quot;` attribute.&#xA;&#xA;By default this detector allows regions of a language to just provide a subset of the strings and fall back to the standard language strings. You can require all regions to provide a full translation by setting the environment variable `ANDROID_LINT_COMPLETE_REGIONS`.&#xA;&#xA;You can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=&quot;languageCode&quot;` for the root `&lt;resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)"
        errorLine1="    &lt;string name=&quot;adeum_interaction_capture_mode&quot;>0&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/kevin/Desktop/IonicProject/hst_connect/hst_connect/platforms/android/app/src/main/res/values/strings.xml"
            line="11"
            column="13"/>
    </issue>

</issues>
